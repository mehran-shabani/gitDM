# Generated by Django 5.2.6 on 2025-09-03 20:49

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Service name', max_length=100, unique=True)),
                ('base_url', models.URLField(help_text='Base URL of the service')),
                ('health_path', models.CharField(default='/health', help_text='Health check endpoint path', max_length=200)),
                ('method', models.CharField(choices=[('GET', 'GET'), ('POST', 'POST'), ('HEAD', 'HEAD')], default='GET', help_text='HTTP method for health check', max_length=10)),
                ('headers', models.JSONField(blank=True, default=dict, help_text='Custom headers as JSON object')),
                ('timeout_s', models.PositiveIntegerField(default=5, help_text='Request timeout in seconds')),
                ('enabled', models.BooleanField(default=True, help_text='Whether this service is actively monitored')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='HealthCheckResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_code', models.PositiveIntegerField(blank=True, null=True)),
                ('ok', models.BooleanField(help_text='Whether the health check was successful')),
                ('latency_ms', models.PositiveIntegerField(help_text='Response time in milliseconds')),
                ('error_text', models.TextField(blank=True, help_text='Error message if health check failed')),
                ('checked_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('meta', models.JSONField(blank=True, default=dict, help_text='Additional metadata about the check')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='health_results', to='monitor.service')),
            ],
            options={
                'verbose_name': 'Health Check Result',
                'verbose_name_plural': 'Health Check Results',
                'ordering': ['-checked_at'],
                'indexes': [models.Index(fields=['service', 'checked_at'], name='monitor_hea_service_76c0e1_idx'), models.Index(fields=['checked_at'], name='monitor_hea_checked_a19525_idx'), models.Index(fields=['ok'], name='monitor_hea_ok_ad9a65_idx')],
            },
        ),
        migrations.CreateModel(
            name='AIDigest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_start', models.DateTimeField(help_text='Start of analysis period')),
                ('period_end', models.DateTimeField(help_text='End of analysis period')),
                ('anomalies', models.JSONField(default=list, help_text='Detected anomalies with timestamps and scores')),
                ('summary_text', models.TextField(help_text='AI-generated summary and recommendations')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('service', models.ForeignKey(blank=True, help_text='Specific service (null for global analysis)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ai_digests', to='monitor.service')),
            ],
            options={
                'verbose_name': 'AI Digest',
                'verbose_name_plural': 'AI Digests',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['service', 'created_at'], name='monitor_aid_service_b712ce_idx'), models.Index(fields=['created_at'], name='monitor_aid_created_3e0d11_idx'), models.Index(fields=['period_start', 'period_end'], name='monitor_aid_period__3ad3bf_idx')],
            },
        ),
    ]
