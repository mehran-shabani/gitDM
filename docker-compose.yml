# docker-compose.yml for GitHub Codespaces
# Simplified configuration using Django defaults

version: '3.9'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: django-app
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py seed_services --file services.json &&
             python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - ./logs:/app/logs
    env_file:
      - .env
    environment:
      - CODESPACES=true
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery-worker
    command: celery -A config worker -l info
    volumes:
      - .:/app
      - ./logs:/app/logs
    env_file:
      - .env
    environment:
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis

  beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery-beat
    command: celery -A config beat -l info
    volumes:
      - .:/app
      - ./logs:/app/logs
    env_file:
      - .env
    environment:
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis

  redis:
    image: redis:7-alpine
    container_name: redis-server
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  db:
    image: postgres:latest
    container_name: postgres-db
    restart: always
    environment:
      - POSTGRES_DB=gitdm
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=your_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
  redis_data:
