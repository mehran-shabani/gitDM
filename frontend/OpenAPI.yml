{
    "openapi": "3.0.3",
    "info": {
        "title": "GITDM API",
        "version": "1.0.0",
        "description": "Description here.",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "servers": [
        {
            "url": "no-server-example.com",
            "description": "Production server with not exists path api"
        },
        {
            "url": "https:/api.golddrop.ir",
            "description": "Development server with root path api"
        }
    ],
    "paths": {
        "/api/ai-summaries": {
            "get": {
                "operationId": "api_ai_summaries_list",
                "description": "List all AI summaries with optional filtering by patient",
                "summary": "List AI summaries",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AISummaryList"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "post": {
                "operationId": "api_ai_summaries_create",
                "description": "Create a new AI summary using GapGPT/OpenAI",
                "summary": "Create AI summary",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAISummary"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAISummary"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAISummary"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateAISummary"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request"
                    }

                }

            }
        },
        "/api/ai-summaries/{id}": {
            "get": {
                "operationId": "api_ai_summaries_retrieve",
                "description": "Retrieve a specific AI summary by ID",
                "summary": "Get AI summary",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai summary.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AISummary"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "put": {
                "operationId": "api_ai_summaries_update",
                "summary": "Update AI summary",
                "description": "ViewSet for AI summaries with GapGPT/OpenAI integration",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai summary.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AISummary"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AISummary"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AISummary"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AISummary"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "patch": {
                "operationId": "api_ai_summaries_partial_update",
                "summary": "Partially update AI summary",
                "description": "ViewSet for AI summaries with GapGPT/OpenAI integration",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai summary.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAISummary"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAISummary"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAISummary"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AISummary"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "delete": {
                "operationId": "api_ai_summaries_destroy",
                "description": "Delete an AI summary",
                "summary": "Delete AI summary",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai summary.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/ai-summaries/{id}/regenerate": {
            "post": {
                "operationId": "api_ai_summaries_regenerate_create",
                "description": "Regenerate AI summary for existing record with new content",
                "summary": "Regenerate AI summary",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this ai summary.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegenerateAISummary"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RegenerateAISummary"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RegenerateAISummary"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AISummary"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/ai-summaries/stats": {
            "get": {
                "operationId": "api_ai_summaries_stats_retrieve",
                "description": "Get statistics about AI summaries",
                "summary": "Get summary statistics",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AISummary"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/ai-summaries/test": {
            "post": {
                "operationId": "api_ai_summaries_test_create",
                "description": "Test the AI service connection and generate a simple summary",
                "summary": "Test AI service",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AISummary"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AISummary"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AISummary"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AISummary"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/ai-summaries/test-references": {
            "post": {
                "operationId": "api_ai_summaries_test_references_create",
                "description": "Test the clinical references linking function with sample text",
                "summary": "Test clinical references linking",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AISummary"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AISummary"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AISummary"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AISummary"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/api/token": {
            "post": {
                "operationId": "api_api_token_create",
                "summary": "Obtain JWT token pair",
                "description": "Takes a set of user credentials and returns an access and refresh JSON web\ntoken pair to prove the authentication of those credentials.",
                "tags": [
                    "api"
                ],
                "security": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenObtainPair"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenObtainPair"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenObtainPair"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenObtainPair"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/api/token/refresh": {
            "post": {
                "operationId": "api_api_token_refresh_create",
                "summary": "Refresh JWT access token",
                "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.",
                "tags": [
                    "api"
                ],
                "security": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefresh"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefresh"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefresh"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenRefresh"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/encounters": {
            "get": {
                "operationId": "api_encounters_list",
                "summary": "List encounters",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Encounter"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "post": {
                "operationId": "api_encounters_create",
                "summary": "Create encounter",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Encounter"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Encounter"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Encounter"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Encounter"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/encounters/{id}": {
            "get": {
                "operationId": "api_encounters_retrieve",
                "summary": "Get encounter",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this encounter.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Encounter"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "put": {
                "operationId": "api_encounters_update",
                "summary": "Update encounter",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this encounter.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Encounter"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Encounter"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Encounter"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Encounter"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "patch": {
                "operationId": "api_encounters_partial_update",
                "summary": "Partially update encounter",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this encounter.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEncounter"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEncounter"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEncounter"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Encounter"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "delete": {
                "operationId": "api_encounters_destroy",
                "summary": "Delete encounter",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this encounter.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/labs": {
            "get": {
                "operationId": "api_labs_list",
                "summary": "List lab results",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LabResult"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "post": {
                "operationId": "api_labs_create",
                "summary": "Create lab result",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LabResult"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/LabResult"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/LabResult"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LabResult"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/labs/{id}": {
            "get": {
                "operationId": "api_labs_retrieve",
                "summary": "Get lab result",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this lab result.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LabResult"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "put": {
                "operationId": "api_labs_update",
                "summary": "Update lab result",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this lab result.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LabResult"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/LabResult"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/LabResult"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LabResult"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request"
                    }

                }
            },
            "patch": {
                "operationId": "api_labs_partial_update",
                "summary": "Partially update lab result",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this lab result.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedLabResult"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedLabResult"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedLabResult"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LabResult"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "delete": {
                "operationId": "api_labs_destroy",
                "summary": "Delete lab result",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this lab result.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/meds": {
            "get": {
                "operationId": "api_meds_list",
                "summary": "List medication orders",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MedicationOrder"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "post": {
                "operationId": "api_meds_create",
                "summary": "Create medication order",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MedicationOrder"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MedicationOrder"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MedicationOrder"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MedicationOrder"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/meds/{id}": {
            "get": {
                "operationId": "api_meds_retrieve",
                "summary": "Get medication order",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this medication order.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MedicationOrder"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "put": {
                "operationId": "api_meds_update",
                "summary": "Update medication order",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this medication order.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MedicationOrder"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MedicationOrder"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MedicationOrder"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MedicationOrder"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "patch": {
                "operationId": "api_meds_partial_update",
                "summary": "Partially update medication order",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this medication order.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMedicationOrder"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMedicationOrder"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMedicationOrder"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MedicationOrder"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "delete": {
                "operationId": "api_meds_destroy",
                "summary": "Delete medication order",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this medication order.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/patients": {
            "get": {
                "operationId": "api_patients_list",
                "summary": "List patients",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Patient"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "post": {
                "operationId": "api_patients_create",
                "summary": "Create patient",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patient"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patient"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patient"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Patient"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request"
                    },

                }
            }
        },
        "/api/patients/{id}": {
            "get": {
                "operationId": "api_patients_retrieve",
                "summary": "Get patient",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this Patient Profile.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Patient"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "put": {
                "operationId": "api_patients_update",
                "summary": "Update patient",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this Patient Profile.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patient"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patient"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patient"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Patient"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "patch": {
                "operationId": "api_patients_partial_update",
                "summary": "Partially update patient",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this Patient Profile.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPatient"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPatient"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPatient"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Patient"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "delete": {
                "operationId": "api_patients_destroy",
                "summary": "Delete patient",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this Patient Profile.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/patients/{id}/timeline": {
            "get": {
                "operationId": "api_patients_timeline_retrieve",
                "summary": "Get patient timeline",
                "description": "تایم‌لاین تجمیع‌شده یک بیمار را برمی‌گرداند، شامل مواجهات بالینی، نتایج آزمایش، دستورهای دارویی و خلاصه‌های تولیدشده توسط زیرسیستم هوش‌مصنوعی.\n\nجزئیات:\n- این اکشن برای یک بیمار مشخص (بر پایه pk/URL) اجرا می‌شود و مجموعه‌های مرتبط را جداگانه واکشی و سریالایز می‌کند.\n- محدودیت‌ها:\n- پارامتر کوئری `limit` تعیین‌کننده حداکثر تعداد آیتم‌ها برای هر یک از نوع‌های Encounter، LabResult و MedicationOrder است. مقدار پیش‌فرض 100 و بیشینه مجاز 500 است (اگر مقدار بزرگ‌تر ارسال شود به 500 تقلیل می‌یابد).\n- AISummaryها مستقل از `limit` همواره تا 5 مورد اخیر (بر اساس `created_at` نزولی) محدود می‌شوند.\n- داده‌های بازگردانده شده:\n- patient: داده سریالایزشدهٔ بیمار\n- encounters: لیست سریالایزشدهٔ Encounterها مرتب‌شده بر اساس `occured_at` نزولی (تا `limit`)\n- labs: لیست سریالایزشدهٔ LabResultها مرتب‌شده بر اساس `taken_at` نزولی (تا `limit`)\n- medications: لیست سریالایزشدهٔ MedicationOrderها مرتب‌شده بر اساس `start_date` نزولی (تا `limit`)\n- ai_summaries: لیست سریالایزشدهٔ AISummaryها (حداکثر 5 مورد، مرتب بر اساس `created_at` نزولی)\n\nنکات مرتبط با هوش‌مصنوعی و پردازش:\n- AISummaryها خروجی‌های تحلیلی/خلاصه‌سازی هستند که ممکن است بر پایه پردازش‌های خودکار، مدل‌های زبانی یا آنالیزهای بالینی تولید شده باشند؛ این موارد مکمل داده‌های خام بالینی هستند و برای نمایش خلاصهٔ وضعیت یا نکات مهم بیمار ارائه می‌شوند.\n- این اکشن صرفاً خواندن و سریالایز کردن رکوردهای AISummary را انجام می‌دهد و هیچ پردازش یا اجرای تسک ضمنی (مثل فراخوانی مدل یا ایجاد وظیفه پس‌زمینه) را راه‌اندازی نمی‌کند؛ اگر نیاز به تولید یا به‌روزرسانی خلاصه‌های هوش‌مصنوعی باشد، آن عملیات باید از مسیرهای جداگانه مدیریت شود.\n\nعوارض جانبی و خطاها:\n- خود تابع داده‌ها را تغییر نمی‌دهد؛ در صورت نبودن دسترسی یا وجود خطا در بازیابی آبجکت بیمار، خطاهای مربوط به permissions یا 404 توسط متدهای پایهٔ ViewSet/DRF تولید می‌شوند.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this Patient Profile.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Patient"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/refs": {
            "get": {
                "operationId": "api_refs_list",
                "summary": "List clinical references",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ClinicalReference"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "post": {
                "operationId": "api_refs_create",
                "summary": "Create clinical reference",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClinicalReference"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ClinicalReference"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ClinicalReference"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClinicalReference"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/refs/{id}": {
            "get": {
                "operationId": "api_refs_retrieve",
                "summary": "Get clinical reference",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this clinical reference.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClinicalReference"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "put": {
                "operationId": "api_refs_update",
                "summary": "Update clinical reference",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this clinical reference.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClinicalReference"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ClinicalReference"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ClinicalReference"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClinicalReference"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "patch": {
                "operationId": "api_refs_partial_update",
                "summary": "Partially update clinical reference",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this clinical reference.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedClinicalReference"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedClinicalReference"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedClinicalReference"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClinicalReference"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "delete": {
                "operationId": "api_refs_destroy",
                "summary": "Delete clinical reference",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this clinical reference.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/token": {
            "post": {
                "operationId": "api_token_create",
                "summary": "Obtain JWT token pair",
                "description": "Takes a set of user credentials and returns an access and refresh JSON web\ntoken pair to prove the authentication of those credentials.",
                "tags": [
                    "api"
                ],
                "security": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenObtainPair"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenObtainPair"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenObtainPair"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenObtainPair"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/token/refresh": {
            "post": {
                "operationId": "api_token_refresh_create",
                "summary": "Refresh JWT access token",
                "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.",
                "tags": [
                    "api"
                ],
                "security": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefresh"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefresh"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefresh"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenRefresh"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/versions/{resource_type}/{resource_id}": {
            "get": {
                "operationId": "api_versions_retrieve",
                "summary": "Get resource versions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "resource_id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "resource_type",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/versions/{resource_type}/{resource_id}/revert": {
            "post": {
                "operationId": "api_versions_revert_create",
                "summary": "Revert resource to previous version",
                "parameters": [
                    {
                        "in": "path",
                        "name": "resource_id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "resource_type",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AISummary": {
                "type": "object",
                "description": "Serializer for AISummary model with enhanced fields",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "patient": {
                        "type": "integer"
                    },
                    "content_type": {
                        "type": "integer",
                        "nullable": true
                    },
                    "object_id": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 64
                    },
                    "resource_type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "summary": {
                        "type": "string"
                    },
                    "references": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "patient",
                    "references",
                    "resource_type",
                    "summary",
                    "updated_at"
                ]
            },
            "AISummaryList": {
                "type": "object",
                "description": "Simplified serializer for listing AI summaries",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "patient": {
                        "type": "integer"
                    },
                    "resource_type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "summary_preview": {
                        "type": "string",
                        "readOnly": true
                    },
                    "references_count": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "patient",
                    "references_count",
                    "resource_type",
                    "summary_preview",
                    "updated_at"
                ]
            },
            "BlankEnum": {
                "enum": [
                    ""
                ]
            },
            "ClinicalReference": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "source": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "year": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 1900,
                        "format": "int64"
                    },
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "maxLength": 200
                    },
                    "topic": {
                        "type": "string",
                        "maxLength": 80
                    }
                },
                "required": [
                    "id",
                    "source",
                    "title",
                    "topic",
                    "year"
                ]
            },
            "CreateAISummary": {
                "type": "object",
                "description": "Serializer for creating AI summaries with content to be processed",
                "properties": {
                    "patient_id": {
                        "type": "integer"
                    },
                    "content": {
                        "type": "string",
                        "description": "Raw medical content to be summarized by AI"
                    },
                    "content_type_model": {
                        "type": "string",
                        "description": "Model name for generic relation (e.g., 'encounter', 'lab_result')"
                    },
                    "object_id": {
                        "type": "string",
                        "description": "Object ID for generic relation"
                    },
                    "context": {
                        "type": "string",
                        "description": "Optional patient context for better summarization"
                    },
                    "summary_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SummaryTypeEnum"
                            }
                        ],
                        "default": "medical_record",
                        "description": "Type of summary for specialized AI prompts\n\n* `medical_record` - Medical Record\n* `encounter` - Patient Encounter\n* `lab_results` - Laboratory Results\n* `medications` - Medications"
                    },
                    "topic_hint": {
                        "type": "string",
                        "default": "diabetes",
                        "description": "Topic hint for linking clinical references"
                    },
                    "async_processing": {
                        "type": "boolean",
                        "default": true,
                        "description": "Process summary asynchronously using background task"
                    }
                },
                "required": [
                    "content",
                    "patient_id"
                ]
            },
            "Encounter": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "patient": {
                        "type": "integer"
                    },
                    "occurred_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "subjective": {
                        "type": "string"
                    },
                    "objective": {},
                    "assessment": {},
                    "plan": {},
                    "created_by": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "created_by",
                    "id",
                    "occurred_at",
                    "patient"
                ]
            },
            "FrequencyEnum": {
                "enum": [
                    "QD",
                    "BID",
                    "TID",
                    "QID",
                    "Q6H",
                    "Q8H",
                    "Q12H",
                    "PRN",
                    "QW",
                    "QM"
                ],
                "type": "string",
                "description": "* `QD` - Once daily\n* `BID` - Twice daily\n* `TID` - Three times daily\n* `QID` - Four times daily\n* `Q6H` - Every 6 hours\n* `Q8H` - Every 8 hours\n* `Q12H` - Every 12 hours\n* `PRN` - As needed\n* `QW` - Weekly\n* `QM` - Monthly"
            },
            "LabResult": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "patient": {
                        "type": "integer"
                    },
                    "encounter": {
                        "type": "integer",
                        "nullable": true
                    },
                    "loinc": {
                        "type": "string",
                        "maxLength": 40
                    },
                    "value": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,4})?$"
                    },
                    "unit": {
                        "type": "string",
                        "maxLength": 16
                    },
                    "taken_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "required": [
                    "id",
                    "loinc",
                    "patient",
                    "taken_at",
                    "unit",
                    "value"
                ]
            },
            "MedicationOrder": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "patient": {
                        "type": "integer"
                    },
                    "encounter": {
                        "type": "integer",
                        "nullable": true
                    },
                    "atc": {
                        "type": "string",
                        "description": "ATC classification code (e.g., A10BA02 for Metformin)",
                        "pattern": "^[A-Z]\\d{2}[A-Z]{1,2}\\d{2}$",
                        "maxLength": 20
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "dose": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "frequency": {
                        "$ref": "#/components/schemas/FrequencyEnum"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    }
                },
                "required": [
                    "atc",
                    "dose",
                    "id",
                    "name",
                    "patient",
                    "start_date"
                ]
            },
            "NullEnum": {
                "enum": [
                    null
                ]
            },
            "PatchedAISummary": {
                "type": "object",
                "description": "Serializer for AISummary model with enhanced fields",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "patient": {
                        "type": "integer"
                    },
                    "content_type": {
                        "type": "integer",
                        "nullable": true
                    },
                    "object_id": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 64
                    },
                    "resource_type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "summary": {
                        "type": "string"
                    },
                    "references": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedClinicalReference": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "source": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "year": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 1900,
                        "format": "int64"
                    },
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "maxLength": 200
                    },
                    "topic": {
                        "type": "string",
                        "maxLength": 80
                    }
                }
            },
            "PatchedEncounter": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "patient": {
                        "type": "integer"
                    },
                    "occurred_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "subjective": {
                        "type": "string"
                    },
                    "objective": {},
                    "assessment": {},
                    "plan": {},
                    "created_by": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedLabResult": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "patient": {
                        "type": "integer"
                    },
                    "encounter": {
                        "type": "integer",
                        "nullable": true
                    },
                    "loinc": {
                        "type": "string",
                        "maxLength": 40
                    },
                    "value": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,4})?$"
                    },
                    "unit": {
                        "type": "string",
                        "maxLength": 16
                    },
                    "taken_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "PatchedMedicationOrder": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "patient": {
                        "type": "integer"
                    },
                    "encounter": {
                        "type": "integer",
                        "nullable": true
                    },
                    "atc": {
                        "type": "string",
                        "description": "ATC classification code (e.g., A10BA02 for Metformin)",
                        "pattern": "^[A-Z]\\d{2}[A-Z]{1,2}\\d{2}$",
                        "maxLength": 20
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "dose": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "frequency": {
                        "$ref": "#/components/schemas/FrequencyEnum"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    }
                }
            },
            "PatchedPatient": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "user": {
                        "type": "integer",
                        "nullable": true
                    },
                    "national_id": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 20
                    },
                    "full_name": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "dob": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "sex": {
                        "type": "string",
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/SexEnum"
                            },
                            {
                                "$ref": "#/components/schemas/BlankEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "primary_doctor": {
                        "type": "integer",
                        "nullable": true
                    },
                    "primary_doctor_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "Patient": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "user": {
                        "type": "integer",
                        "nullable": true
                    },
                    "national_id": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 20
                    },
                    "full_name": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "dob": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "sex": {
                        "type": "string",
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/SexEnum"
                            },
                            {
                                "$ref": "#/components/schemas/BlankEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "primary_doctor": {
                        "type": "integer",
                        "nullable": true
                    },
                    "primary_doctor_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "primary_doctor_id"
                ]
            },
            "RegenerateAISummary": {
                "type": "object",
                "description": "Serializer for regenerating existing AI summaries",
                "properties": {
                    "summary_id": {
                        "type": "string"
                    },
                    "content": {
                        "type": "string",
                        "description": "New content to summarize"
                    },
                    "context": {
                        "type": "string",
                        "description": "Optional patient context"
                    },
                    "summary_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SummaryTypeEnum"
                            }
                        ],
                        "default": "medical_record"
                    }
                },
                "required": [
                    "content",
                    "summary_id"
                ]
            },
            "SexEnum": {
                "enum": [
                    "MALE",
                    "FEMALE",
                    "OTHER"
                ],
                "type": "string",
                "description": "* `MALE` - Male\n* `FEMALE` - Female\n* `OTHER` - Other"
            },
            "SummaryTypeEnum": {
                "enum": [
                    "medical_record",
                    "encounter",
                    "lab_results",
                    "medications"
                ],
                "type": "string",
                "description": "* `medical_record` - Medical Record\n* `encounter` - Patient Encounter\n* `lab_results` - Laboratory Results\n* `medications` - Medications"
            },
            "TokenObtainPair": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "access": {
                        "type": "string",
                        "readOnly": true
                    },
                    "refresh": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "access",
                    "email",
                    "password",
                    "refresh"
                ]
            },
            "TokenRefresh": {
                "type": "object",
                "properties": {
                    "access": {
                        "type": "string",
                        "readOnly": true
                    },
                    "refresh": {
                        "type": "string"
                    }
                },
                "required": [
                    "access",
                    "refresh"
                ]
            }
        },
        "securitySchemes": {
            "jwtAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}
